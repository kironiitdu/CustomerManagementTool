@model Customer
<div class="container">
    <h1>Customer Details</h1>

    <div class="row">
        <div class="col-md-6">
            <ul class="list-group">
                <li class="list-group-item">ID: @Model.Id</li>
                <li class="list-group-item">Name: @Model.FirstName @Model.LastName</li>
                <li class="list-group-item">Birthday: @Model.Birthday.ToString("yyyy-MM-dd")</li>
            </ul>
        </div>
    </div>

    <h2>Contacts</h2>

    <div class="row">
        <div class="col-md-12">
            <button type="button" class="btn btn-primary" id="addContactBtn">Add Contact</button>
        </div>
    </div>

    <div id="contactsSection">
        <table class="table" id="contactsTable">
            <thead>
                <tr>
                    <th>Contact Id</th>
                    <th>Contact Type</th>
                    <th>Contact Value</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var contact in Model.Contacts)
                {
                    <tr id="contact-@contact.Id">
                        <td>@contact.Id</td>
                        <td id="contactType">@contact.Type.ToString()</td>
                        <td id ="contactValue">@contact.Value</td>
                        <td>
                            <button type="button" class="btn btn-info btn-sm editContactBtn" data-contact-id="@contact.Id">Edit</button>
                            <button type="button" class="btn btn-danger btn-sm deleteContactBtn" data-contact-id="@contact.Id">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <h2>Tasks</h2>

    <!-- Task section -->

    <button id="addTaskBtn" class="btn btn-primary">Add New Task</button>

    <!-- Task list table -->
    <table class="table mt-3">
        <thead>
            <tr>
                <th>Description</th>
                <th>Creation Date</th>
                <th>Solved</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="taskListContainer">
            <!-- Task list will be loaded dynamically here -->
        </tbody>
    </table>

    <!-- Modal for Add/Edit Task -->
        <div class="modal fade" id="taskModal" tabindex="-1" role="dialog" aria-labelledby="contactModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Task Details</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <form id="taskForm">
                        <input type="hidden" id="taskId" name="Id">
                        <div class="form-group">
                            <label for="taskDescription">Description:</label>
                            <input type="text" class="form-control" id="taskDescription" name="Description">
                        </div>
                        <div class="form-group">
                            <label for="taskCreationDate">Creation Date:</label>
                            <input type="date" class="form-control" id="taskCreationDate" name="CreationDate">
                        </div>
                        <div class="form-group form-check">
                            <input type="checkbox" class="form-check-input" id="taskSolved" name="Solved">
                            <label class="form-check-label" for="taskSolved">Solved</label>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveTaskBtn">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Contact Modal -->
<div class="modal fade" id="contactModal" tabindex="-1" role="dialog" aria-labelledby="contactModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="contactModalLabel">Contact Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="contactForm">
                    <input type="hidden" id="contactId" name="contactId" />
                    <div class="form-group">
                        <label for="contactType">Type</label>
                        <select class="form-control" id="contactType" name="contactType" required>
                            <option value="">Select Type</option>
                            <option value="Phone">Phone</option>
                            <option value="Mail">Mail</option>
                            <option value="Web">Web</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="contactValue">Value</label>
                        <input type="text" class="form-control" id="contactValue" name="contactValue" required />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveContactBtn">Save</button>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script>
        $(document).ready(function () {
            // Add Contact Button Click
            $('#addContactBtn').click(function () {
                $('#contactModal').modal('show');
                $('#contactId').val('');
                $('#contactType').val('');
                $('#contactValue').val('');
            });

            // Edit Contact Button Click
            $(document).on('click', '.editContactBtn', function () {
                var contactId = $(this).data('contact-id');
                var contactType = $('#contact-' + contactId).find('#contactType').text().trim();
                var contactValue = $('#contact-' + contactId).find('#contactValue').text().trim();
                // Setting the existing values in the modal input fields
                $('#contactId').val(contactId);
                $('#contactType').val(contactType);
                $('#contactValue').val(contactValue);

                $('#contactModal').modal('show');
            });

            // Save Contact Button Click
            $('#saveContactBtn').click(function () {
                var contactId = $('#contactId').val();
                var customerId = '@Model.Id';
                var contactType = $('#contactType').val();
                var contactValue = $('#contactValue').val();

                var url = contactId ? '/Contact/Edit' : '/Contact/Add';

                $.ajax({
                    url: url,
                    type: 'POST',
                    data: {
                        customerId: customerId,
                        contactId: contactId,
                        type: contactType,
                        value: contactValue
                    },
                    success: function (data) {
                        $('#contactModal').modal('hide');
                        // Clear existing table rows
                        location.reload();
                        // Append new table rows
                        fetchContacts(customerId);
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                    }
                });
            });

            // Delete Contact Button Click
            $('.deleteContactBtn').click(function () {
                var contactId = $(this).data('contact-id');
                var customerId = '@Model.Id';

                if (confirm('Are you sure you want to delete this contact?')) {
                    $.ajax({
                        url: '/Contact/DeleteContact',
                        type: 'POST',
                        data: {
                            customerId: customerId,
                            contactId: contactId
                        },
                        success: function () {
                            // Remove the contact row from the table
                            location.reload();
                        },
                        error: function (xhr, status, error) {
                            console.error(error);
                        }
                    });
                }
            });

            //Open close modal
            $('.modal-header .close').click(function () {
                $('#contactModal').modal('hide');
            });

            
            $('#contactModal .modal-footer .btn-secondary').click(function () {
                $('#contactModal').modal('hide');
            });

            function fetchContacts(customerId) {
                $.ajax({
                    url: '/Contact/GetContactsByCustomerId',
                    type: 'GET',
                    data: { customerId: customerId },
                    success: function (data) {
                        $('#contactsTable tbody').empty();
                        $.each(data, function (index, contact) {
                            console.log(contact);
                            var newRow = $('<tr id="contact-' + contact.Id + '">').append(
                                $('<td>').text(contact.type),
                                $('<td>').text(contact.value),
                                $('<td>').append(
                                    $('<button type="button" class="btn btn-info btn-sm editContactBtn">').attr('data-contact-id', contact.Id).text('Edit'),
                                    $('<button type="button" class="btn btn-danger btn-sm deleteContactBtn">').attr('data-contact-id', contact.Id).text('Delete')
                                )
                            );
                            $('#contactsTable tbody').append(newRow);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                    }
                });
            }

            //Task Section Code

            function loadTaskList() {
                var customerId = '@Model.Id';

                fetch('/Task/GetTasksByCustomerId?customerId=' + customerId)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Failed to fetch task list');
                        }
                        return response.json();
                    })
                    .then(tasks => {
                        // Clear previous content
                        var taskListContainer = document.getElementById('taskListContainer');
                        taskListContainer.innerHTML = '';

                        // Create HTML for each task and append it to the container
                        tasks.forEach(function (task) {
                            var taskItem = document.createElement('tr');
                            taskItem.innerHTML = '<td>' + task.description + '</td>' +
                                '<td>' + task.creationDate + '</td>' +
                                '<td>' + (task.solved ? 'Yes' : 'No') + '</td>' +
                                '<td>' +
                                '<button type="button" class="btn btn-sm btn-primary mr-1" onclick="openTaskModal(' + task.Id + ')">Edit</button>' +
                                '<button style="margin-left:5px" type="button" class="btn btn-sm btn-danger" onclick="deleteTask(' + task.Id + ')">Delete</button>' +
                                '</td>';
                            taskListContainer.appendChild(taskItem);
                        });
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Failed to fetch task list. Please try again.');
                    });
            }

            // Function to open modal for adding/editing task
            function openTaskModal(taskId) {

                alert("Click");
                var modal = document.getElementById('taskModal');
                modal.style.display = 'block';

                // Populate form fields with task data
                var task = { Id: '', Description: '', CreationDate: '', Solved: false }; // Initialize empty task
                if (taskId) {
                    // Here, you would use AJAX to fetch task details from the server
                    // For demonstration purpose, let's create some mock data
                    task = {
                        Id: taskId,
                        Description: "Task " + taskId,
                        CreationDate: "2024-04-" + taskId,
                        Solved: taskId % 2 === 0 // Even IDs are considered solved
                    };
                }
                document.getElementById('taskId').value = task.Id;
                document.getElementById('taskDescription').value = task.Description;
                document.getElementById('taskCreationDate').value = task.CreationDate;
                document.getElementById('taskSolved').checked = task.Solved;
            }

            // Function to close modal
            $('#taskModal').on('hide.bs.modal', function () {
                $('#taskForm')[0].reset(); // Reset form fields
            });

            // Function to submit add/edit task form
            $('#taskForm').submit(function (event) {
                event.preventDefault();

                // Here, you would use AJAX to submit the form data to the server
                // For demonstration purpose, let's log the form data to the console
                var formData = {
                    Id: $('#taskId').val(),
                    Description: $('#taskDescription').val(),
                    CreationDate: $('#taskCreationDate').val(),
                    Solved: $('#taskSolved').is(':checked')
                };
                console.log(formData);

                // Close modal
                $('#taskModal').modal('hide');

                // Reload task list
                loadTaskList();
            });

            // Function to delete task
            function deleteTask(taskId) {
                if (confirm('Are you sure you want to delete this task?')) {
                    // Here, you would use AJAX to delete the task from the server
                    // For demonstration purpose, let's log the task ID to the console
                    console.log('Deleting task with ID: ' + taskId);

                    // Reload task list
                    loadTaskList();
                }
            }
            //Add task Modal
            $('#addTaskBtn').click(function () {
                $('#taskModal').modal('show');
                $('#contactId').val('');
                $('#contactType').val('');
                $('#contactValue').val('');
            });

            //Open close modal
            $('.modal-header .close').click(function () {
                $('#taskModal').modal('hide');
            });


            $('#taskModal .modal-footer .btn-secondary').click(function () {
                $('#taskModal').modal('hide');
            });
            // Load task list on page load

            // Save Task Button Click
            $('#saveTaskBtn').click(function () {
                alert("saveTaskBtn");
                var description = $('#taskDescription').val();
                var creationDate = $('#taskCreationDate').val();
                var solved = $('#taskSolved').is(':checked');
                var customerId = '@Model.Id';
              
                var data = {
                    customerId: customerId,
                    Description: description,
                    CreationDate: creationDate,
                    Solved: solved
                };

                $.ajax({
                    url: '/Task/AddTask',
                    type: 'POST',
                    data: {
                        customerId: customerId,
                        Description: description,
                        CreationDate: creationDate,
                        Solved: solved
                    },
                    success: function (data) {
                        alert("Success");
                        $('#taskModal').modal('hide');
                        // Clear existing table rows
                        location.reload();
                        // Append new table rows
                        loadTaskList();
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                    }
                });
            });

            loadTaskList();
        });


    </script>
}